/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package br.edu.vianna.sistemaclube.view.cadastros.eventos;

import br.edu.vianna.sistemaclube.dao.impl.AtividadeDAO;
import br.edu.vianna.sistemaclube.dao.impl.EventoDAO;
import br.edu.vianna.sistemaclube.dao.impl.usuariodao.InstrutorDAO;
import br.edu.vianna.sistemaclube.model.atividades.Atividade;
import br.edu.vianna.sistemaclube.model.eventos.Evento;
import br.edu.vianna.sistemaclube.model.usuarios.Instrutor;
import br.edu.vianna.sistemaclube.model.usuarios.Usuario;
import br.edu.vianna.sistemaclube.utils.datahora.FormataData;
import br.edu.vianna.sistemaclube.utils.datahora.VerificaDataHora;
import br.edu.vianna.sistemaclube.utils.login.Sessao;
import br.edu.vianna.sistemaclube.view.cadastros.atividades.ViewCadastroAtividades;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.util.List;

/**
 * @author William
 */
public class ViewListarEventos extends javax.swing.JDialog {

    /**
     * Creates new form ViewDetalhesAtividades
     */
    public ViewListarEventos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public ViewListarEventos(ViewCadastroAtividades viewCadastroAtividades, boolean modal) {
        super(viewCadastroAtividades, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTopo = new javax.swing.JPanel();
        lblTextoCabecalho = new javax.swing.JLabel();
        pnlControles = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        tabPanelBuscar = new javax.swing.JTabbedPane();
        pnlBuscarPorId = new javax.swing.JPanel();
        txtBuscarPorId = new javax.swing.JTextField();
        btnBuscarPorId = new javax.swing.JButton();
        pnlBuscarPorNome = new javax.swing.JPanel();
        txtBuscarPorNome = new javax.swing.JTextField();
        btnBuscarPorNome = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnBuscarPorData = new javax.swing.JButton();
        txtBuscarPorData = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbEventos = new javax.swing.JTable();
        tabPnlResumoEventos = new javax.swing.JTabbedPane();
        pnlResumoEventoSelecionado = new javax.swing.JPanel();
        txtIdEventoSelecionado = new javax.swing.JTextField();
        lblIdEvento = new javax.swing.JLabel();
        lblNomeEvento = new javax.swing.JLabel();
        txtNomeEvento = new javax.swing.JTextField();
        txtDataEvento = new javax.swing.JFormattedTextField();
        txtHorarioEvento = new javax.swing.JFormattedTextField();
        lblDataRealizacao = new javax.swing.JLabel();
        lblHorarioRealizacao = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricaoEvento = new javax.swing.JTextArea();
        lblDescricaoEvento = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Informações sobre eventos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlTopo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTextoCabecalho.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lblTextoCabecalho.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTextoCabecalho.setText("Lista de Eventos");
        lblTextoCabecalho.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlTopoLayout = new javax.swing.GroupLayout(pnlTopo);
        pnlTopo.setLayout(pnlTopoLayout);
        pnlTopoLayout.setHorizontalGroup(
            pnlTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTextoCabecalho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTopoLayout.setVerticalGroup(
            pnlTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTextoCabecalho)
                .addContainerGap())
        );

        pnlControles.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/24x24/Close.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlControlesLayout = new javax.swing.GroupLayout(pnlControles);
        pnlControles.setLayout(pnlControlesLayout);
        pnlControlesLayout.setHorizontalGroup(
            pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlControlesLayout.setVerticalGroup(
            pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFechar)
                .addContainerGap())
        );

        tabPanelBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Buscar evento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        tabPanelBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtBuscarPorId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtBuscarPorId.setForeground(new java.awt.Color(255, 255, 255));
        txtBuscarPorId.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnBuscarPorId.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnBuscarPorId.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/16x16/Zoom.png"))); // NOI18N
        btnBuscarPorId.setText("Buscar");
        btnBuscarPorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPorIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBuscarPorIdLayout = new javax.swing.GroupLayout(pnlBuscarPorId);
        pnlBuscarPorId.setLayout(pnlBuscarPorIdLayout);
        pnlBuscarPorIdLayout.setHorizontalGroup(
            pnlBuscarPorIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarPorIdLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(txtBuscarPorId, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarPorId, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlBuscarPorIdLayout.setVerticalGroup(
            pnlBuscarPorIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBuscarPorIdLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(pnlBuscarPorIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarPorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPorId))
                .addContainerGap())
        );

        tabPanelBuscar.addTab("Por ID", pnlBuscarPorId);

        txtBuscarPorNome.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtBuscarPorNome.setForeground(new java.awt.Color(255, 255, 255));
        txtBuscarPorNome.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnBuscarPorNome.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnBuscarPorNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/16x16/Zoom.png"))); // NOI18N
        btnBuscarPorNome.setText("Buscar");
        btnBuscarPorNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPorNomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBuscarPorNomeLayout = new javax.swing.GroupLayout(pnlBuscarPorNome);
        pnlBuscarPorNome.setLayout(pnlBuscarPorNomeLayout);
        pnlBuscarPorNomeLayout.setHorizontalGroup(
            pnlBuscarPorNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarPorNomeLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(txtBuscarPorNome, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarPorNome, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlBuscarPorNomeLayout.setVerticalGroup(
            pnlBuscarPorNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBuscarPorNomeLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(pnlBuscarPorNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarPorNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPorNome))
                .addContainerGap())
        );

        tabPanelBuscar.addTab("Por Nome", pnlBuscarPorNome);

        btnBuscarPorData.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnBuscarPorData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/16x16/Zoom.png"))); // NOI18N
        btnBuscarPorData.setText("Buscar");
        btnBuscarPorData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPorDataActionPerformed(evt);
            }
        });

        txtBuscarPorData.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtBuscarPorData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtBuscarPorData.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBuscarPorData.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(txtBuscarPorData, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarPorData, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarPorData)
                    .addComponent(txtBuscarPorData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tabPanelBuscar.addTab("Por Data", jPanel1);

        tbEventos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nome", "Descrição", "Data do evento", "Horário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbEventos.setShowGrid(true);
        tbEventos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEventosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbEventos);
        if (tbEventos.getColumnModel().getColumnCount() > 0) {
            tbEventos.getColumnModel().getColumn(0).setMinWidth(65);
            tbEventos.getColumnModel().getColumn(0).setPreferredWidth(65);
            tbEventos.getColumnModel().getColumn(0).setMaxWidth(60);
            tbEventos.getColumnModel().getColumn(1).setMinWidth(100);
        }

        tabPnlResumoEventos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtIdEventoSelecionado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtIdEventoSelecionado.setForeground(new java.awt.Color(255, 255, 255));
        txtIdEventoSelecionado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIdEventoSelecionado.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtIdEventoSelecionado.setEnabled(false);

        lblIdEvento.setText("ID do evento");

        lblNomeEvento.setText("Nome do evento");

        txtNomeEvento.setEditable(false);
        txtNomeEvento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtNomeEvento.setForeground(new java.awt.Color(255, 255, 255));
        txtNomeEvento.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtDataEvento.setEditable(false);
        txtDataEvento.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtDataEvento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataEvento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataEvento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        txtHorarioEvento.setEditable(false);
        txtHorarioEvento.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtHorarioEvento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtHorarioEvento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHorarioEvento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        lblDataRealizacao.setText("Data do evento");

        lblHorarioRealizacao.setText("Horário do evento");

        txtDescricaoEvento.setEditable(false);
        txtDescricaoEvento.setColumns(20);
        txtDescricaoEvento.setRows(5);
        txtDescricaoEvento.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtDescricaoEvento);

        lblDescricaoEvento.setText("Descrição do evento");

        javax.swing.GroupLayout pnlResumoEventoSelecionadoLayout = new javax.swing.GroupLayout(pnlResumoEventoSelecionado);
        pnlResumoEventoSelecionado.setLayout(pnlResumoEventoSelecionadoLayout);
        pnlResumoEventoSelecionadoLayout.setHorizontalGroup(
            pnlResumoEventoSelecionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResumoEventoSelecionadoLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(pnlResumoEventoSelecionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNomeEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNomeEvento)
                    .addGroup(pnlResumoEventoSelecionadoLayout.createSequentialGroup()
                        .addGroup(pnlResumoEventoSelecionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblIdEvento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIdEventoSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(98, 98, 98)
                        .addGroup(pnlResumoEventoSelecionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDataEvento, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(lblDataRealizacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlResumoEventoSelecionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtHorarioEvento, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .addComponent(lblHorarioRealizacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(pnlResumoEventoSelecionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addComponent(lblDescricaoEvento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(90, 90, 90))
        );
        pnlResumoEventoSelecionadoLayout.setVerticalGroup(
            pnlResumoEventoSelecionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResumoEventoSelecionadoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlResumoEventoSelecionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdEvento)
                    .addComponent(lblDataRealizacao)
                    .addComponent(lblHorarioRealizacao)
                    .addComponent(lblDescricaoEvento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlResumoEventoSelecionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlResumoEventoSelecionadoLayout.createSequentialGroup()
                        .addGroup(pnlResumoEventoSelecionadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdEventoSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDataEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHorarioEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNomeEvento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNomeEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(27, 27, 27))
        );

        tabPnlResumoEventos.addTab("Evento selecionado", new javax.swing.ImageIcon(getClass().getResource("/img/16x16/Script.png")), pnlResumoEventoSelecionado); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTopo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlControles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabPanelBuscar)
                    .addComponent(jScrollPane2)
                    .addComponent(tabPnlResumoEventos))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTopo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabPnlResumoEventos, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlControles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabPanelBuscar.getAccessibleContext().setAccessibleName("Por Nome");
        tabPnlResumoEventos.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        usuario = Sessao.getUsuarioLogado();
        carregarEventosAtivos();
    }//GEN-LAST:event_formWindowOpened

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnBuscarPorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPorIdActionPerformed
        if (!txtBuscarPorId.getText().isBlank()) {
            realizarBuscaDeCadastroPorId();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Digite um ID para realizar a busca!", "Campo de busca vazio", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarPorIdActionPerformed

    private void btnBuscarPorNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPorNomeActionPerformed
        if (!txtBuscarPorNome.getText().isBlank()) {
            realizarBuscaDeCadastroPorNome();
        } else {
            txtBuscarPorNome.setText("");
            JOptionPane.showMessageDialog(rootPane, "Digite o nome do evento para realizar a busca!", "Campo de busca vazio", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarPorNomeActionPerformed

    private void btnBuscarPorDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPorDataActionPerformed
        realizarBuscaDeCadastroPorData();
    }//GEN-LAST:event_btnBuscarPorDataActionPerformed

    private void tbEventosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEventosMouseClicked
        escutarCliquesDoMouseNaTabela(evt);
    }//GEN-LAST:event_tbEventosMouseClicked

    private void limparSelecao() {
        txtIdEventoSelecionado.setText("");
        txtNomeEvento.setText("");
        txtDataEvento.setText("");
        txtHorarioEvento.setText("");
        txtDescricaoEvento.setText("");
    }

    private void escutarCliquesDoMouseNaTabela(java.awt.event.MouseEvent evt) {
        int linha = tbEventos.rowAtPoint(evt.getPoint());
        if (linha >= 0) {
            txtIdEventoSelecionado.setText((String) tbEventos.getValueAt(linha, 0));
            txtNomeEvento.setText((String) tbEventos.getValueAt(linha, 1));
            txtDescricaoEvento.setText((String) tbEventos.getValueAt(linha, 2));
            txtDataEvento.setText((String) tbEventos.getValueAt(linha, 3));
            txtHorarioEvento.setText((String) tbEventos.getValueAt(linha, 4));
        }
    }

    private void realizarBuscaDeCadastroPorId() {
        Evento evento;
        try {
            evento = new EventoDAO().buscarPorId(Integer.valueOf(txtBuscarPorId.getText()));

            if (evento == null || VerificaDataHora.verificarSeDataHoraJaPassou(evento.getDataEvento(), evento.getHoraEvento())) {
                JOptionPane.showMessageDialog(rootPane, "A busca não retornou nenhum resultado!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                limparSelecao();
            } else {
                if (VerificaDataHora.verificarSeDataHoraJaPassou(evento.getDataEvento(), evento.getHoraEvento())) {
                    preencherTabela(evento);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "O evento que você buscou não está cadastrado na base ou já aconteceu.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    limparSelecao();
                }
            }
        } catch (SQLException | ClassNotFoundException ex) {
            exibeMensagemErroNaBase(ex);
        }
    }

    private void realizarBuscaDeCadastroPorNome() {
        List<Evento> eventos;
        try {
            eventos = new EventoDAO().buscarPorNome(txtBuscarPorNome.getText());

            if (eventos.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "A busca não retornou nenhum resultado!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                limparSelecao();
            } else {
                preencherTabela(eventos);
            }
        } catch (SQLException | ClassNotFoundException ex) {
            exibeMensagemErroNaBase(ex);
        }
    }

    private void realizarBuscaDeCadastroPorData() {
        List<Evento> eventos;
        try {
            eventos = new EventoDAO().buscarPorData(txtBuscarPorData.getText());

            if (eventos.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "A busca não retornou nenhum resultado!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                limparSelecao();
            } else {
                preencherTabela(eventos);
            }
        } catch (SQLException | ClassNotFoundException ex) {
            exibeMensagemErroNaBase(ex);
        }
    }

    private void carregarEventosAtivos() {
        List<Evento> eventos;
        try {
            eventos = new EventoDAO().buscarTodos();

            if (eventos.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Nenhum evento foi encontrada.", "Aviso", JOptionPane.WARNING_MESSAGE);
            } else {
                preencherTabela(eventos);
            }
        } catch (SQLException | ClassNotFoundException ex) {
            exibeMensagemErroNaBase(ex);
        }
    }

    private void preencherTabela(List<Evento> eventos) throws SQLException, ClassNotFoundException {
        DefaultTableModel tabela = (DefaultTableModel) tbEventos.getModel();

        while (tabela.getRowCount() > 0) {
            tabela.removeRow(0);
        }

        for (Evento evt : eventos) {
            if (VerificaDataHora.verificarSeDataHoraJaPassou(evt.getDataEvento(), evt.getHoraEvento())) {
                String[] linha = getDadosEventos(evt);
                tabela.addRow(linha);
            }
        }

        centralizarConteudosDaTabela();
    }

    private void preencherTabela(Evento evt) throws SQLException, ClassNotFoundException {
        DefaultTableModel tabela = (DefaultTableModel) tbEventos.getModel();

        while (tabela.getRowCount() > 0) {
            tabela.removeRow(0);
        }

        String[] linha = getDadosEventos(evt);
        tabela.addRow(linha);

        centralizarConteudosDaTabela();
    }

    private static String[] getDadosEventos(Evento evt) {
        return new String[]{
                String.valueOf(evt.getId()),
                evt.getNome(),
                String.valueOf(evt.getDescricao()),
                FormataData.formataDataParaExibicao(evt.getDataEvento()), evt.getHoraEvento()
        };
    }

    private void centralizarConteudosDaTabela() {
        DefaultTableCellRenderer cetralizarConteudo = new DefaultTableCellRenderer();
        cetralizarConteudo.setHorizontalAlignment(SwingConstants.CENTER);
        tbEventos.getColumnModel().getColumn(0).setCellRenderer(cetralizarConteudo);
        tbEventos.getColumnModel().getColumn(1).setCellRenderer(cetralizarConteudo);
        tbEventos.getColumnModel().getColumn(2).setCellRenderer(cetralizarConteudo);
        tbEventos.getColumnModel().getColumn(3).setCellRenderer(cetralizarConteudo);
        tbEventos.getColumnModel().getColumn(4).setCellRenderer(cetralizarConteudo);
    }

    private void exibeMensagemErroNaBase(Exception ex) {
        JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro ao tentar buscar o dado na base.\nERRO: " + ex.getMessage(), "Ocorreu um erro", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewListarEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewListarEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewListarEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewListarEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ViewListarEventos dialog = new ViewListarEventos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarPorData;
    private javax.swing.JButton btnBuscarPorId;
    private javax.swing.JButton btnBuscarPorNome;
    private javax.swing.JButton btnFechar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDataRealizacao;
    private javax.swing.JLabel lblDescricaoEvento;
    private javax.swing.JLabel lblHorarioRealizacao;
    private javax.swing.JLabel lblIdEvento;
    private javax.swing.JLabel lblNomeEvento;
    private javax.swing.JLabel lblTextoCabecalho;
    private javax.swing.JPanel pnlBuscarPorId;
    private javax.swing.JPanel pnlBuscarPorNome;
    private javax.swing.JPanel pnlControles;
    private javax.swing.JPanel pnlResumoEventoSelecionado;
    private javax.swing.JPanel pnlTopo;
    private javax.swing.JTabbedPane tabPanelBuscar;
    private javax.swing.JTabbedPane tabPnlResumoEventos;
    private javax.swing.JTable tbEventos;
    private javax.swing.JFormattedTextField txtBuscarPorData;
    private javax.swing.JTextField txtBuscarPorId;
    private javax.swing.JTextField txtBuscarPorNome;
    private javax.swing.JFormattedTextField txtDataEvento;
    private javax.swing.JTextArea txtDescricaoEvento;
    private javax.swing.JFormattedTextField txtHorarioEvento;
    private javax.swing.JTextField txtIdEventoSelecionado;
    private javax.swing.JTextField txtNomeEvento;
    // End of variables declaration//GEN-END:variables
    private Usuario usuario;
}
