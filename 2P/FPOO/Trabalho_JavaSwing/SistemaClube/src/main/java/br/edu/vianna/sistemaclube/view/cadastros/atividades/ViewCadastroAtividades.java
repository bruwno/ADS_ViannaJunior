/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package br.edu.vianna.sistemaclube.view.cadastros.atividades;

import br.edu.vianna.sistemaclube.dao.impl.AtividadeDAO;
import br.edu.vianna.sistemaclube.dao.impl.usuariodao.InstrutorDAO;
import br.edu.vianna.sistemaclube.model.atividades.Atividade;
import br.edu.vianna.sistemaclube.model.atividades.ETipoAtividades;
import br.edu.vianna.sistemaclube.model.usuarios.Instrutor;
import br.edu.vianna.sistemaclube.utils.datahora.FormataData;

import javax.swing.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 * @author William
 */
public class ViewCadastroAtividades extends javax.swing.JDialog {

    /**
     * Creates new form ViewCadastroAdministrador
     */
    public ViewCadastroAtividades(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public ViewCadastroAtividades(ViewDetalhesAtividades viewDetalhesAtividades, boolean modal) {
        super(viewDetalhesAtividades, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTopo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        pnlCorpo = new javax.swing.JPanel();
        pnlDadosUsuario = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblDescricao = new javax.swing.JLabel();
        txtDataAtividade = new javax.swing.JFormattedTextField();
        scrollPnlDescricao = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        txtHorarioAtividade = new javax.swing.JFormattedTextField();
        lblHorario = new javax.swing.JLabel();
        pnlSelecaoInstrutor = new javax.swing.JPanel();
        cboInstrutores = new javax.swing.JComboBox<>();
        lblInstrutores = new javax.swing.JLabel();
        txtIdInstrutor = new javax.swing.JTextField();
        pnlSelecaoAtividade = new javax.swing.JPanel();
        cboAtividades = new javax.swing.JComboBox<>();
        lblAtividades = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        pnlControles = new javax.swing.JPanel();
        btnCadastrar = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        btnAlterarDados = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        tabPanelBuscar = new javax.swing.JTabbedPane();
        pnlBuscarPorId = new javax.swing.JPanel();
        txtBuscarPorId = new javax.swing.JTextField();
        btnBuscarPorId = new javax.swing.JButton();
        pnlBuscarPorNome = new javax.swing.JPanel();
        txtBuscarPorNome = new javax.swing.JTextField();
        btnBuscarPorNome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Atividades");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlTopo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Cadastro de Atividades");

        javax.swing.GroupLayout pnlTopoLayout = new javax.swing.GroupLayout(pnlTopo);
        pnlTopo.setLayout(pnlTopoLayout);
        pnlTopoLayout.setHorizontalGroup(
            pnlTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTopoLayout.setVerticalGroup(
            pnlTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pnlCorpo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pnlDadosUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da atividade"));
        pnlDadosUsuario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNome.setText("Nome");
        pnlDadosUsuario.add(lblNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        lblData.setText("Data (dd/mm/aaaa)");
        pnlDadosUsuario.add(lblData, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        txtNome.setForeground(new java.awt.Color(255, 255, 255));
        txtNome.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNome.setNextFocusableComponent(txtDescricao);
        pnlDadosUsuario.add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 600, -1));

        lblDescricao.setText(" Descrição");
        pnlDadosUsuario.add(lblDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        txtDataAtividade.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtDataAtividade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataAtividade.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataAtividade.setNextFocusableComponent(txtHorarioAtividade);
        pnlDadosUsuario.add(txtDataAtividade, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 215, -1));

        txtDescricao.setColumns(20);
        txtDescricao.setForeground(new java.awt.Color(255, 255, 255));
        txtDescricao.setRows(5);
        txtDescricao.setNextFocusableComponent(txtDataAtividade);
        scrollPnlDescricao.setViewportView(txtDescricao);

        pnlDadosUsuario.add(scrollPnlDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 600, 36));

        txtHorarioAtividade.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txtHorarioAtividade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtHorarioAtividade.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHorarioAtividade.setNextFocusableComponent(cboAtividades);
        pnlDadosUsuario.add(txtHorarioAtividade, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 230, -1));

        lblHorario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHorario.setText("Horário (HH:mm)");
        pnlDadosUsuario.add(lblHorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, -1, -1));

        pnlSelecaoInstrutor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selecione o instrutor da atividade", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        pnlSelecaoInstrutor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cboInstrutores.setForeground(new java.awt.Color(255, 255, 255));
        cboInstrutores.setNextFocusableComponent(btnCadastrar);
        cboInstrutores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboInstrutoresActionPerformed(evt);
            }
        });
        pnlSelecaoInstrutor.add(cboInstrutores, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 270, -1));

        lblInstrutores.setText("Instrutores");
        pnlSelecaoInstrutor.add(lblInstrutores, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtIdInstrutor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIdInstrutor.setBorder(null);
        txtIdInstrutor.setEnabled(false);
        pnlSelecaoInstrutor.add(txtIdInstrutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 24, -1, -1));

        pnlDadosUsuario.add(pnlSelecaoInstrutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 310, 90));

        pnlSelecaoAtividade.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selecione o tipo de atividade", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        pnlSelecaoAtividade.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cboAtividades.setForeground(new java.awt.Color(255, 255, 255));
        cboAtividades.setNextFocusableComponent(cboInstrutores);
        cboAtividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAtividadesActionPerformed(evt);
            }
        });
        pnlSelecaoAtividade.add(cboAtividades, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 273, -1));

        lblAtividades.setText("Atividades");
        pnlSelecaoAtividade.add(lblAtividades, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        pnlDadosUsuario.add(pnlSelecaoAtividade, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 230, 310, 90));

        txtId.setEditable(false);
        txtId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtId.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtId.setEnabled(false);
        txtId.setFocusable(false);
        txtId.setRequestFocusEnabled(false);
        pnlDadosUsuario.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, -1, -1));

        pnlControles.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/24x24/Create.png"))); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setNextFocusableComponent(btnAlterarDados);
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/24x24/Close.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnAlterarDados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/24x24/Sync.png"))); // NOI18N
        btnAlterarDados.setText("Alterar");
        btnAlterarDados.setEnabled(false);
        btnAlterarDados.setNextFocusableComponent(btnCancelar);
        btnAlterarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarDadosActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/24x24/Abort.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.setNextFocusableComponent(btnFechar);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlControlesLayout = new javax.swing.GroupLayout(pnlControles);
        pnlControles.setLayout(pnlControlesLayout);
        pnlControlesLayout.setHorizontalGroup(
            pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(btnAlterarDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(34, 34, 34)
                .addComponent(btnFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlControlesLayout.setVerticalGroup(
            pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlControlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAlterarDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFechar, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabPanelBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar e alterar"));
        tabPanelBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtBuscarPorId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtBuscarPorId.setForeground(new java.awt.Color(255, 255, 255));
        txtBuscarPorId.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnBuscarPorId.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnBuscarPorId.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/16x16/Zoom.png"))); // NOI18N
        btnBuscarPorId.setText("Buscar");
        btnBuscarPorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPorIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBuscarPorIdLayout = new javax.swing.GroupLayout(pnlBuscarPorId);
        pnlBuscarPorId.setLayout(pnlBuscarPorIdLayout);
        pnlBuscarPorIdLayout.setHorizontalGroup(
            pnlBuscarPorIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarPorIdLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(txtBuscarPorId, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarPorId, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        pnlBuscarPorIdLayout.setVerticalGroup(
            pnlBuscarPorIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBuscarPorIdLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(pnlBuscarPorIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarPorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPorId))
                .addContainerGap())
        );

        tabPanelBuscar.addTab("Por ID", pnlBuscarPorId);

        txtBuscarPorNome.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtBuscarPorNome.setForeground(new java.awt.Color(255, 255, 255));
        txtBuscarPorNome.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnBuscarPorNome.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnBuscarPorNome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/16x16/Zoom.png"))); // NOI18N
        btnBuscarPorNome.setText("Buscar");
        btnBuscarPorNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPorNomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBuscarPorNomeLayout = new javax.swing.GroupLayout(pnlBuscarPorNome);
        pnlBuscarPorNome.setLayout(pnlBuscarPorNomeLayout);
        pnlBuscarPorNomeLayout.setHorizontalGroup(
            pnlBuscarPorNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarPorNomeLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(txtBuscarPorNome, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarPorNome, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        pnlBuscarPorNomeLayout.setVerticalGroup(
            pnlBuscarPorNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBuscarPorNomeLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(pnlBuscarPorNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarPorNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPorNome))
                .addContainerGap())
        );

        tabPanelBuscar.addTab("Por nome", pnlBuscarPorNome);

        javax.swing.GroupLayout pnlCorpoLayout = new javax.swing.GroupLayout(pnlCorpo);
        pnlCorpo.setLayout(pnlCorpoLayout);
        pnlCorpoLayout.setHorizontalGroup(
            pnlCorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCorpoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlControles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabPanelBuscar)
                    .addComponent(pnlDadosUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlCorpoLayout.setVerticalGroup(
            pnlCorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCorpoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDadosUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlControles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCorpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlTopo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(pnlTopo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCorpo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        operacoesDeCarregamento();
    }//GEN-LAST:event_formWindowOpened

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        realizarCadastro();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAlterarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarDadosActionPerformed
        realizarAlteracaoNoCadastro();
    }//GEN-LAST:event_btnAlterarDadosActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cancelarAlteracaoDeCadastro();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void cboInstrutoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboInstrutoresActionPerformed
        atualizarIdInstrutorExibido();
    }//GEN-LAST:event_cboInstrutoresActionPerformed

    private void cboAtividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAtividadesActionPerformed

    }//GEN-LAST:event_cboAtividadesActionPerformed

    private void btnBuscarPorNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPorNomeActionPerformed
        if (!txtBuscarPorNome.getText().isBlank()) {
            realizarBuscaDeCadastroPorNome();
        } else {
            txtBuscarPorNome.setText("");
            JOptionPane.showMessageDialog(rootPane, "Digite o nome da atividade para realizar a busca!", "Campo de busca vazio", JOptionPane.WARNING_MESSAGE);
            desabilitaAlteracaoDeCadastro();
        }
    }//GEN-LAST:event_btnBuscarPorNomeActionPerformed

    private void btnBuscarPorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPorIdActionPerformed
        if (!txtBuscarPorId.getText().isBlank()) {
            realizarBuscaDeCadastroPorId();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Digite um ID para realizar a busca!", "Campo de busca vazio", JOptionPane.WARNING_MESSAGE);
            desabilitaAlteracaoDeCadastro();
        }
    }//GEN-LAST:event_btnBuscarPorIdActionPerformed

    private void operacoesDeCarregamento() {
        carregarListaDeInstrutores();
        carregarListaDeAtividades();
        if (!btnCancelar.isEnabled()) {
            txtNome.requestFocusInWindow();
        } else {
            txtBuscarPorId.requestFocusInWindow();
        }
        txtId.setVisible(false);
        txtIdInstrutor.setVisible(false);
    }

    private Atividade obterValidarDados() {
        String nome = this.txtNome.getText();
        String tipoAtividadeSelecionada = (String) this.cboAtividades.getSelectedItem();
        String descricao = this.txtDescricao.getText();
        String dataAtividade = this.txtDataAtividade.getText();
        String horaAtividade = this.txtHorarioAtividade.getText();
        int idInstrutor = Integer.parseInt(txtIdInstrutor.getText());

        ETipoAtividades tipoAtividade = obterTipoDeAtividade(tipoAtividadeSelecionada);

        if (nome.isBlank() || descricao.isBlank() || dataAtividade.isBlank() || horaAtividade.isBlank()) {
            JOptionPane.showMessageDialog(rootPane, "Todos os campos devem ser preenchidos!", "Preenchimento inválido!", JOptionPane.WARNING_MESSAGE);
            return null;
        }

        return new Atividade(nome, tipoAtividade, descricao, dataAtividade, horaAtividade, idInstrutor);
    }


    private void realizarCadastro() {
        Atividade atividade = obterValidarDados();
        if (atividade != null) {
            try {
                new AtividadeDAO().inserir(atividade);
                JOptionPane.showMessageDialog(rootPane, "A atividade foi cadastrada com sucesso!", "Cadastro realizado", JOptionPane.INFORMATION_MESSAGE);
                limparCampos();
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível realizar o cadastro. " + ex.getMessage(), "Ocorreu um erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void realizarAlteracaoNoCadastro() {
        Atividade atividade = obterValidarDados();
        if (atividade != null) {
            int idAtividade = Integer.parseInt(txtId.getText());
            atividade.setId(idAtividade);

            try {
                new AtividadeDAO().alterar(atividade);
                JOptionPane.showMessageDialog(rootPane, "A atividade foi atualizada com sucesso!", "Atualização realizada", JOptionPane.INFORMATION_MESSAGE);
                limparCampos();
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(rootPane, "Não foi possível realizar a atualização. " + ex.getMessage(), "Ocorreu um erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }


    private void realizarBuscaDeCadastroPorNome() {
        Atividade atividade = null;
        try {
            atividade = new AtividadeDAO().buscarUmPorNome(txtBuscarPorNome.getText());
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro ao tentar buscar o dado na base.\n" + ex.getMessage(), "Ocorreu um erro", JOptionPane.ERROR_MESSAGE);
        }
        if (atividade == null) {
            JOptionPane.showMessageDialog(rootPane, "A busca não retornou nenhum resultado!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            desabilitaAlteracaoDeCadastro();
        } else {
            preencherCampos(atividade);
        }
    }

    public void realizarBuscaDeCadastroPorId() {
        Atividade atividade = null;
        try {
            atividade = new AtividadeDAO().buscarPorId(Integer.valueOf(txtBuscarPorId.getText()));
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro ao tentar buscar o dado na base.\n" + ex.getMessage(), "Ocorreu um erro", JOptionPane.ERROR_MESSAGE);
        }
        if (atividade == null) {
            JOptionPane.showMessageDialog(rootPane, "A busca não retornou nenhum resultado!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            desabilitaAlteracaoDeCadastro();
        } else {
            preencherCampos(atividade);
        }
    }

    private void preencherCampos(Atividade atividade) {
        habilitaAlteracaoDeCadastro();
        this.txtId.setText(String.valueOf(atividade.getId()));
        this.txtNome.setText(atividade.getNome());
        this.txtDescricao.setText(atividade.getDescricao());
        this.txtDataAtividade.setText(FormataData.formataDataParaExibicao(atividade.getDataAtividade()));
        this.txtHorarioAtividade.setText(atividade.getHoraAtividade());
        this.cboAtividades.setSelectedItem(atividade.getTipoAtividade().toString());
        Instrutor instrutor = null;
        try {
            instrutor = new InstrutorDAO().buscarPorId(atividade.getIdInstrutor());
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro ao tentar buscar o dado.\n" + ex.getMessage(), "Ocorreu um erro", JOptionPane.ERROR_MESSAGE);
            desabilitaAlteracaoDeCadastro();
        }
        if (instrutor == null) {
            JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro ao tentar definir o instrutor.", "Ocorreu um erro", JOptionPane.ERROR_MESSAGE);
            desabilitaAlteracaoDeCadastro();
        } else {
            this.cboInstrutores.setSelectedItem(String.format("%d - %s %s", instrutor.getId(), instrutor.getNome(), instrutor.getSobrenome()));
        }
    }

    private void atualizarIdInstrutorExibido() {
        String instrutorSelecionado = (String) cboInstrutores.getSelectedItem();
        int idInstrutor = retornaIdDoInstrutorSelecionado(instrutorSelecionado);
        this.txtIdInstrutor.setText(String.valueOf(idInstrutor));
    }

    private int retornaIdDoInstrutorSelecionado(String nomeInstrutor) {
        int idInstrutor = -1;
        int posCaracSeparador = nomeInstrutor.indexOf('-');

        if (posCaracSeparador != -1) {
            idInstrutor = Integer.parseInt(nomeInstrutor.substring(0, posCaracSeparador).trim());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro ao processar o id do instrutor", "Ocorreu um erro", JOptionPane.ERROR_MESSAGE);
            this.btnCadastrar.setEnabled(false);
        }

        return idInstrutor;
    }

    private void carregarListaDeAtividades() {
        for (ETipoAtividades atividade : ETipoAtividades.values()) {
            this.cboAtividades.addItem(String.valueOf(atividade));
        }
    }

    private void carregarListaDeInstrutores() {
        try {
            instrutores = new InstrutorDAO().buscarTodos();
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro ao tentar buscar os dados.\n" + ex.getMessage(), "Ocorreu um erro", JOptionPane.ERROR_MESSAGE);
        }
        if (instrutores == null) {
            this.cboInstrutores.addItem("Nenhum instrutor cadastrado.");
            this.btnCadastrar.setEnabled(false);
        } else {
            for (Instrutor instrutor : instrutores) {
                this.cboInstrutores.addItem(String.format("%d - %s %s", instrutor.getId(), instrutor.getNome(), instrutor.getSobrenome()));
            }
        }
    }

    private static ETipoAtividades obterTipoDeAtividade(String tipoAtividadeSelecionada) {
        ETipoAtividades tipoAtividade = null;
        for (ETipoAtividades a : ETipoAtividades.values()) {
            if (a.toString().equals(tipoAtividadeSelecionada)) {
                tipoAtividade = a;
                break;
            }
        }
        return tipoAtividade;
    }

    private void cancelarAlteracaoDeCadastro() {
        limparCampos();
        desabilitaAlteracaoDeCadastro();
    }

    private void habilitaAlteracaoDeCadastro() {
        this.btnCadastrar.setEnabled(false);
        this.btnAlterarDados.setEnabled(true);
        this.btnCancelar.setEnabled(true);
        limparCampos();
    }

    private void desabilitaAlteracaoDeCadastro() {
        this.btnCadastrar.setEnabled(true);
        this.btnAlterarDados.setEnabled(false);
        this.btnCancelar.setEnabled(false);
        limparCampos();
    }

    private void limparCampos() {
        this.txtId.setText("");
        this.txtIdInstrutor.setText("");
        this.txtBuscarPorId.setText("");
        this.txtNome.setText("");
        this.txtDescricao.setText("");
        this.txtDataAtividade.setText("");
        this.txtHorarioAtividade.setText("");
        this.cboAtividades.setSelectedIndex(0);
        this.cboInstrutores.setSelectedIndex(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCadastroAtividades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ViewCadastroAtividades dialog = new ViewCadastroAtividades(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarDados;
    private javax.swing.JButton btnBuscarPorId;
    private javax.swing.JButton btnBuscarPorNome;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnFechar;
    private javax.swing.JComboBox<String> cboAtividades;
    private javax.swing.JComboBox<String> cboInstrutores;
    private javax.swing.JLabel lblAtividades;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblHorario;
    private javax.swing.JLabel lblInstrutores;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlBuscarPorId;
    private javax.swing.JPanel pnlBuscarPorNome;
    private javax.swing.JPanel pnlControles;
    private javax.swing.JPanel pnlCorpo;
    private javax.swing.JPanel pnlDadosUsuario;
    private javax.swing.JPanel pnlSelecaoAtividade;
    private javax.swing.JPanel pnlSelecaoInstrutor;
    private javax.swing.JPanel pnlTopo;
    private javax.swing.JScrollPane scrollPnlDescricao;
    private javax.swing.JTabbedPane tabPanelBuscar;
    private javax.swing.JTextField txtBuscarPorId;
    private javax.swing.JTextField txtBuscarPorNome;
    private javax.swing.JFormattedTextField txtDataAtividade;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JFormattedTextField txtHorarioAtividade;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdInstrutor;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
    private List<Instrutor> instrutores = new ArrayList<>();

    public JButton getBtnCadastrar() {
        return btnCadastrar;
    }

    public JButton getBtnAlterarDados() {
        return btnAlterarDados;
    }

    public JButton getBtnCancelar() {
        return btnCancelar;
    }

    public JTextField getTxtBuscarPorId() {
        return txtBuscarPorId;
    }
}
